def gv

pipeline {
    agent any
    tools {
        // name as it appears in Jenkins "Tools" menu under 'Maven installations'
        maven 'maven-3.9'
    }
    stages {

        stage("init"){
            steps {
                script {
                    gv = load "script.groovy"
                }
            }
        }

        stage('build jar') {
            steps {
                script {
                    gv.buildJar()
                }
            }
        }

        stage('build & push docker image') {
            steps {
                script {
                    gv.buildAndPushImage()
                }
            }
        }

        stage('deploy') {
            steps {
                script {
                    echo "Deploying the application..."
                }
            }
        }
    }
}


// For Lectures 8.9
// def globalVar
// pipeline {
//     agent any
//     parameters {
//         choice(name: 'VERSION', choices: ['1.1.0', '1.2.0', '1.3.0'], description:'')
//         booleanParam(name: 'executeTests', defaultValue: true, description:'')
//     }
//     stages {

//         stage('init') {
//             steps {
//                 script {
//                     globalVar = load "script.groovy"
//                 }
//             }
//         }

//         stage('build') {
//             steps {
//                 script {
//                     globalVar.buildApp()
//                 }
//             }
//         }

//         stage('test') {
//             when {
//                 expression {
//                     params.executeTests
//                 }
//             }
//             steps {
//                 script {
//                     globalVar.testApp()
//                 }
//             }
//         }

//         stage('deploy') {
//             // Another way to get user input during Jenkins build process. User will select env to deploy in.
//             steps {
//                 script {
//                     env.ENV = input message: "Select the env to deploy to", ok: "Done", parameters: [choice(name: 'ENV', choices: ['DEV', 'STAGING', 'PROD'], description:'')]

//                     globalVar.deployApp()
//                     echo "Deploying to ${ENV}" // Now global scoped
//                 }
//             }
//         }
//     }
// }
